@model Stat_reports.ViewModels.ReportArchiveViewModel

@{
    ViewData["Title"] = "Архив отчетов";
}


@section Styles {
<link rel="stylesheet" href="~/css/archive.css" />
}

<div class="archive-container">
    <h2 class="text-center mb-4">📦 @ViewData["Title"]</h2>

    <form method="get" asp-action="ReportArchive" class="row g-3 mb-4">

        <div class="col-md-3">
            <label for="name" class="form-label">Название отчета</label>
            <input type="text" class="form-control" id="name" name="name" value="@Model.Filter.Name" placeholder="Введите название" />
        </div>

        <div class="col-md-3">
            <label for="reportType" class="form-label">Тип отчета</label>
            <select class="form-select" id="reportType" name="reportType">
                <option value="">Все</option>
                <option value="Plan" selected="@(Model.Filter.Type.ToString() == "Plan")">Плановый</option>
                <option value="Accountant" selected="@(Model.Filter.Type.ToString() == "Accountant")">Бухгалтерский</option>
            </select>
        </div>

        <div class="col-md-3">
            <label for="templateId" class="form-label">Шаблон отчета</label>
            <select class="form-select" id="templateId" name="templateId">
                <option value="">Все</option>
                @foreach (var template in Model.Templates)
                {
                    <option value="@template.Id"
                    data-type="@template.Type"
                    selected="@(template.Id == Model.Filter.TemplateId)">
                        @template.Name
                    </option>
                }
            </select>
        </div>

        @if (User.IsInRole("Admin") || User.IsInRole("PEB") || User.IsInRole("OBUnF"))
        {
            <div class="col-md-3">
                <label for="branchId" class="form-label">Филиал</label>
                <select class="form-select" id="branchId" name="branchId">
                    <option value="">Все</option>
                    @foreach (var branch in Model.Branches)
                    {
                        <option value="@branch.Id" selected="@(branch.Id == Model.Filter.BranchId)">@branch.Name</option>
                    }
                </select>
            </div>
        }
        else if (User.IsInRole("User"))
        {
            <div class="col-md-3">
                <label for="branchId" class="form-label">Филиал</label>
                <select class="form-select" id="branchId" name="branchId" disabled>
                    @if (Model.Branches.Any(b => b.Id == Model.Filter.BranchId))
                    {
                        var userBranch = Model.Branches.FirstOrDefault(b => b.Id == Model.Filter.BranchId);
                        <option value="@userBranch.Id" selected>@userBranch.Name</option>
                    }
                </select>
            </div>
        }

        <div class="col-md-3">
            <label for="startDate" class="form-label">Дата начала</label>
            <input type="date" class="form-control" id="startDate" name="startDate" value="@Model.Filter.StartDate?.ToString("yyyy-MM-dd")" />
        </div>

        <div class="col-md-3">
            <label for="endDate" class="form-label">Дата окончания</label>
            <input type="date" class="form-control" id="endDate" name="endDate" value="@Model.Filter.EndDate?.ToString("yyyy-MM-dd")" />
        </div>

        <div class="col-md-2 align-self-end d-flex gap-2">
            <button type="submit" class="btn btn-outline-primary w-100">🔍 Фильтровать</button>
            <button type="button" id="resetFilters" class="btn btn-outline-secondary w-100">↺ Сбросить</button>
        </div>
    </form>

    <div class="table-responsive">
        <table class="table table-hover table-bordered align-middle">
            <thead>
                <tr>
                    <th>Название</th>
                    <th>Тип</th>
                    <th>Филиал</th>
                    <th>Период</th>
                    <th>Комментарий</th>
                    <th>Действия</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var report in Model.Reports)
                {
                    <tr>
                        <td>@report.Name</td>
                        <td>
                            @switch (report.Type)
                            {
                                case ReportType.Accountant:
                                    <span class="report-badge accountant">Бухгалтерский</span>
                                    break;
                                case ReportType.Plan:
                                    <span class="report-badge plan">Плановый</span>

                                    break;
                            }

                        </td>
                        <td>@Model.Branches.FirstOrDefault(b => b.Id == report.BranchId)?.Name</td>
                        <td>@report.Period.ToString("dd.MM.yyyy")</td>
                        <td>
                            @if (!string.IsNullOrEmpty(report.Comment))
                            {
                                <button type="button" 
                                    class="btn btn-sm btn-info" 
                                    data-bs-toggle="modal" 
                                    data-bs-target="#commentModal-@report.Id">
                                    Комментарий
                                </button>

                                <div class="modal fade" id="commentModal-@report.Id" 
                                tabindex="-1"
                                aria-labelledby="modalLabel-@report.Id"
                                aria-hidden="true">
                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="modalLabel-@report.Id">Комментарий</h5>
                                                <button type="button" class="btn-close" 
                                                data-bs-dismiss="modal" 
                                                aria-label="Закрыть"></button>
                                            </div>
                                            <div class="modal-body">
                                                @report.Comment
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" 
                                                    class="btn btn-secondary" 
                                                    data-bs-dismiss="modal">Закрыть</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </td>
                        <td>
                            <a asp-action="PreviewExcel" 
                            asp-route-reportId="@report.Id" 
                            asp-route-isArchive="@true"
                            class="btn btn-sm btn-primary">
                                Просмотр
                            </a>
                            <a asp-action="DownloadReport"
                               asp-route-reportname="@report.Name"
                               asp-route-reportId="@report.Id"
                               class="btn btn-sm btn-primary">
                                ⬇ Скачать
                            </a>
                        </td>
                    </tr>
                }

                @if (!Model.Reports.Any())
                {
                    <tr>
                        <td colspan="7" class="text-center text-muted">Нет отчетов по заданным фильтрам</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const reportTypeSelect = document.getElementById('reportType');
            const templateSelect = document.getElementById('templateId');
            const allTemplates = Array.from(templateSelect.options).filter(opt => opt.value !== "");

            function filterTemplatesByType(type) {
                templateSelect.innerHTML = '<option value="">Все</option>';
                const filtered = allTemplates.filter(opt => opt.dataset.type === type || type === "");
                filtered.forEach(opt => templateSelect.appendChild(opt));
            }

            reportTypeSelect.addEventListener('change', () => {
                filterTemplatesByType(reportTypeSelect.value);
            });

            // Инициализировать при загрузке (на случай возврата после фильтрации)
            filterTemplatesByType(reportTypeSelect.value);

            // Сброс фильтров
            document.getElementById('resetFilters').addEventListener('click', () => {
                const form = document.querySelector('form[method="get"]');

                // Сбросить текстовые и date поля
                form.querySelectorAll('input[type="text"], input[type="date"]').forEach(input => input.value = '');

                // Сбросить select-поля
                form.querySelectorAll('select').forEach(select => {
                    if (!select.disabled) {
                        select.selectedIndex = 0;
                    }
                });

                // Обновить шаблоны
                filterTemplatesByType("");

                // Отправить форму
                form.submit();
            });
        });
    </script>
}